apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'silverfox-scrapers'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

      # Silver Fox Scraper System - Coordinator
      - job_name: 'silverfox-coordinator'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - silverfox-scrapers
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: silverfox-coordinator-service
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: instance
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: node

      # Silver Fox Scraper System - Workers
      - job_name: 'silverfox-workers'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - silverfox-scrapers
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: silverfox-workers-service
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: instance
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: node

      # Silver Fox Scraper System - Analytics
      - job_name: 'silverfox-analytics'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - silverfox-scrapers
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: silverfox-analytics-service
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: instance
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: node

      # Redis metrics
      - job_name: 'redis'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - silverfox-scrapers
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: redis-service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: instance

      # Kubernetes Pods (for custom metrics)
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - silverfox-scrapers
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: monitoring
data:
  silverfox-alerts.yml: |
    groups:
    - name: silverfox-scraper-alerts
      rules:
      # High-level system alerts
      - alert: SilverFoxScraperDown
        expr: up{job=~"silverfox-.*"} == 0
        for: 5m
        labels:
          severity: critical
          service: silverfox-scrapers
        annotations:
          summary: "Silver Fox scraper component is down"
          description: "{{ $labels.job }} ({{ $labels.instance }}) has been down for more than 5 minutes."

      - alert: SilverFoxHighErrorRate
        expr: rate(silverfox_scraper_errors_total[5m]) > 0.1
        for: 10m
        labels:
          severity: warning
          service: silverfox-scrapers
        annotations:
          summary: "High error rate in Silver Fox scrapers"
          description: "Error rate is {{ $value | humanizePercentage }} for {{ $labels.job }} on {{ $labels.instance }}"

      - alert: SilverFoxHighMemoryUsage
        expr: (container_memory_working_set_bytes{pod=~"silverfox-.*"} / container_spec_memory_limit_bytes{pod=~"silverfox-.*"}) > 0.9
        for: 15m
        labels:
          severity: warning
          service: silverfox-scrapers
        annotations:
          summary: "High memory usage in Silver Fox component"
          description: "Memory usage is {{ $value | humanizePercentage }} for {{ $labels.pod }}"

      - alert: SilverFoxHighCPUUsage
        expr: rate(container_cpu_usage_seconds_total{pod=~"silverfox-.*"}[5m]) > 0.8
        for: 15m
        labels:
          severity: warning
          service: silverfox-scrapers
        annotations:
          summary: "High CPU usage in Silver Fox component"
          description: "CPU usage is {{ $value | humanizePercentage }} for {{ $labels.pod }}"

      # Scraper-specific alerts
      - alert: SilverFoxScraperJobFailed
        expr: increase(silverfox_scraper_job_failures_total[1h]) > 3
        for: 0m
        labels:
          severity: critical
          service: silverfox-scrapers
        annotations:
          summary: "Multiple Silver Fox scraper job failures"
          description: "{{ $labels.dealership }} scraper has failed {{ $value }} times in the last hour"

      - alert: SilverFoxScraperSlowResponse
        expr: silverfox_scraper_duration_seconds > 300
        for: 0m
        labels:
          severity: warning
          service: silverfox-scrapers
        annotations:
          summary: "Silver Fox scraper slow response"
          description: "{{ $labels.dealership }} scraper took {{ $value }}s to complete (>5 minutes)"

      - alert: SilverFoxNoDataReceived
        expr: increase(silverfox_vehicles_scraped_total[6h]) == 0
        for: 0m
        labels:
          severity: critical
          service: silverfox-scrapers
        annotations:
          summary: "No vehicle data received from Silver Fox scraper"
          description: "{{ $labels.dealership }} has not produced any vehicle data in the last 6 hours"

      # Redis alerts
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 5m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 5 minutes."

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 10m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

      # Business logic alerts
      - alert: SilverFoxCompetitivePriceAlert
        expr: silverfox_competitive_price_difference_percent > 20
        for: 0m
        labels:
          severity: warning
          service: silverfox-analytics
        annotations:
          summary: "Significant competitive price difference detected"
          description: "{{ $labels.dealership }} has a {{ $value }}% price difference for {{ $labels.vehicle_model }}"

      - alert: SilverFoxInventoryDropAlert
        expr: decrease(silverfox_total_inventory_count[1h]) > 10
        for: 0m
        labels:
          severity: warning
          service: silverfox-analytics
        annotations:
          summary: "Significant inventory drop detected"
          description: "{{ $labels.dealership }} inventory dropped by {{ $value }} vehicles in the last hour"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: silverfox-scraper-sa
      containers:
      - name: prometheus
        image: prom/prometheus:v2.47.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
          - '--storage.tsdb.retention.time=30d'
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/
        - name: prometheus-rules-volume
          mountPath: /etc/prometheus/rules/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
      - name: prometheus-rules-volume
        configMap:
          name: prometheus-rules
      - name: prometheus-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP

---
# Grafana deployment for visualization
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.1.0
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-config
        configMap:
          name: grafana-config

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: grafana
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secrets
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: grafana
type: Opaque
data:
  # Default password: silverfox123 (CHANGE IN PRODUCTION!)
  admin-password: c2lsdmVyZm94MTIz

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: grafana
data:
  grafana.ini: |
    [analytics]
    check_for_updates = false
    reporting_enabled = false

    [security]
    admin_user = admin
    disable_gravatar = true

    [users]
    allow_sign_up = false
    allow_org_create = false

    [auth.anonymous]
    enabled = false

    [server]
    root_url = https://grafana.silverfox-scrapers.yourdomain.com
    domain = silverfox-scrapers.yourdomain.com

    [datasources]
    [datasources.prometheus]
    name = Prometheus
    type = prometheus
    url = http://prometheus-service:9090
    access = proxy
    isDefault = true