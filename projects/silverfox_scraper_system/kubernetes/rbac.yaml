apiVersion: v1
kind: ServiceAccount
metadata:
  name: silverfox-scraper-sa
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: service-account
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: silverfox-scrapers
  name: silverfox-scraper-role
  labels:
    app: silverfox-scraper-system
    component: rbac
rules:
# Pod management for dynamic scaling
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]

# ConfigMap and Secret access
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

# Service and Endpoint discovery
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch"]

# Events for logging and monitoring
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# PersistentVolumeClaim management
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]

# Deployment and ReplicaSet management for scaling
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]

# HorizontalPodAutoscaler management
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Metrics access for monitoring
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: silverfox-scraper-rolebinding
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: rbac
subjects:
- kind: ServiceAccount
  name: silverfox-scraper-sa
  namespace: silverfox-scrapers
roleRef:
  kind: Role
  name: silverfox-scraper-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole for cross-namespace operations (if needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: silverfox-scraper-cluster-role
  labels:
    app: silverfox-scraper-system
    component: rbac-cluster
rules:
# Node information for resource optimization
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["get"]

# Custom Resource Definitions (if using custom resources)
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]

# Metrics access across cluster
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: silverfox-scraper-cluster-rolebinding
  labels:
    app: silverfox-scraper-system
    component: rbac-cluster
subjects:
- kind: ServiceAccount
  name: silverfox-scraper-sa
  namespace: silverfox-scrapers
roleRef:
  kind: ClusterRole
  name: silverfox-scraper-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
# PodSecurityPolicy (if using PSP, being deprecated in favor of Pod Security Standards)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: silverfox-scraper-psp
  labels:
    app: silverfox-scraper-system
    component: security-policy
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  allowedCapabilities:
    - SYS_ADMIN  # Required for Chrome in worker pods
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false

---
# ClusterRole for PSP usage
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: silverfox-scraper-psp-role
  labels:
    app: silverfox-scraper-system
    component: security-policy
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - silverfox-scraper-psp

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: silverfox-scraper-psp-rolebinding
  labels:
    app: silverfox-scraper-system
    component: security-policy
roleRef:
  kind: ClusterRole
  name: silverfox-scraper-psp-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: silverfox-scraper-sa
  namespace: silverfox-scrapers