# Silver Fox Scraper System - Production Kubernetes Deployment
# ===========================================================
# 
# Consolidated production-ready Kubernetes deployment configuration
# for the Silver Fox automotive inventory scraper system.
#
# This deployment includes:
# - Scraper coordinator service
# - Worker nodes for parallel scraping
# - Analytics and monitoring components
# - Auto-scaling and high availability
#
# Author: Claude (Silver Fox Assistant)
# Created: July 2025

apiVersion: v1
kind: Namespace
metadata:
  name: silverfox-scrapers
  labels:
    name: silverfox-scrapers
    environment: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: silverfox-main-scraper-system
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: main-system
    tier: application
    version: v1.0
spec:
  replicas: 2  # High availability with 2 replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: silverfox-main-scraper-system
      component: main-system
  template:
    metadata:
      labels:
        app: silverfox-main-scraper-system
        component: main-system
        tier: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        # Security annotations
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        container.apparmor.security.beta.kubernetes.io/main-scraper: runtime/default
    spec:
      serviceAccountName: silverfox-scraper-sa
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      
      # Image pull secrets for private registry
      imagePullSecrets:
      - name: silverfox-registry-secret
      
      # Init containers for dependency checks
      initContainers:
      - name: check-dependencies
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Checking system dependencies..."
          # Check for configuration files
          if [ ! -f /app/config/main_scraper_config.csv ]; then
            echo "ERROR: Main scraper configuration not found"
            exit 1
          fi
          # Test network connectivity
          nc -z google.com 80 || { echo "ERROR: No internet connectivity"; exit 1; }
          echo "All dependencies checked successfully"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      containers:
      - name: main-scraper
        image: silverfox/main-scraper-system:latest  # Replace with actual image
        imagePullPolicy: Always
        
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        
        # Environment variables from secrets and configmaps
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app:/app/silverfox_system/core"
        
        # API Keys and sensitive data from secrets
        - name: PIPEDRIVE_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: silverfox-api-secrets
              key: pipedrive_api_token
              optional: false
        - name: PIPEDRIVE_DOMAIN
          valueFrom:
            secretKeyRef:
              name: silverfox-api-secrets
              key: pipedrive_domain
              optional: false
        
        # Email notification settings
        - name: SMTP_SERVER
          valueFrom:
            secretKeyRef:
              name: silverfox-api-secrets
              key: smtp_server
              optional: true
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: silverfox-api-secrets
              key: smtp_username
              optional: true
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: silverfox-api-secrets
              key: smtp_password
              optional: true
        - name: ALERT_EMAIL_RECIPIENTS
          valueFrom:
            secretKeyRef:
              name: silverfox-api-secrets
              key: alert_email_recipients
              optional: true
        
        # System configuration
        - name: MAX_CONCURRENT_SCRAPERS
          valueFrom:
            configMapKeyRef:
              name: silverfox-scraper-config
              key: max_concurrent_scrapers
              optional: true
        - name: SCRAPER_TIMEOUT_SECONDS
          valueFrom:
            configMapKeyRef:
              name: silverfox-scraper-config
              key: scraper_timeout_seconds
              optional: true
        - name: DATA_RETENTION_DAYS
          valueFrom:
            configMapKeyRef:
              name: silverfox-scraper-config
              key: data_retention_days
              optional: true
        
        # Volume mounts
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /app/output_data
        - name: logs-volume
          mountPath: /app/logs
        - name: temp-volume
          mountPath: /tmp
        
        # Resource limits and requests
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 5Gi
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        # Startup probe for slow-starting applications
        startupProbe:
          httpGet:
            path: /startup
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30  # Allow up to 5 minutes for startup
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 3000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Scraper needs to write temporary files
          capabilities:
            drop:
            - ALL
            add:
            - NET_ADMIN  # Required for network operations
        
        # Command and args for the main scraper orchestrator
        command: ["/usr/local/bin/python3"]
        args: ["/app/main_scraper_orchestrator.py", "--production", "--config=/app/config/main_scraper_config.csv"]
      
      # Volumes
      volumes:
      - name: config-volume
        configMap:
          name: silverfox-scraper-config
          defaultMode: 0644
      - name: data-volume
        persistentVolumeClaim:
          claimName: silverfox-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: silverfox-logs-pvc
      - name: temp-volume
        emptyDir:
          sizeLimit: 2Gi
      
      # Node selection and affinity
      nodeSelector:
        kubernetes.io/os: linux
        node-type: scraper-optimized  # Custom node label for scraper nodes
      
      affinity:
        # Pod anti-affinity to spread replicas across nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - silverfox-main-scraper-system
              topologyKey: kubernetes.io/hostname
        
        # Node affinity for performance optimization
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: instance-type
                operator: In
                values:
                - c5.large
                - c5.xlarge
                - c5.2xlarge
      
      # Tolerations for dedicated scraper nodes
      tolerations:
      - key: "scraper-dedicated"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      
      # Restart policy
      restartPolicy: Always
      
      # DNS configuration
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0

---
# Service for the main scraper system
apiVersion: v1
kind: Service
metadata:
  name: silverfox-main-scraper-service
  namespace: silverfox-scrapers
  labels:
    app: silverfox-main-scraper-system
    component: main-system
    tier: application
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: silverfox-main-scraper-system
    component: main-system

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: silverfox-main-scraper-hpa
  namespace: silverfox-scrapers
  labels:
    app: silverfox-main-scraper-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: silverfox-main-scraper-system
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: silverfox-main-scraper-pdb
  namespace: silverfox-scrapers
  labels:
    app: silverfox-main-scraper-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: silverfox-main-scraper-system
      component: main-system

---
# ConfigMap for scraper configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: silverfox-scraper-config
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
data:
  max_concurrent_scrapers: "5"
  scraper_timeout_seconds: "300"
  data_retention_days: "30"
  log_level: "INFO"
  environment: "production"
  
  # Scraper-specific configurations
  enable_monitoring: "true"
  enable_alerting: "true"
  enable_pipedrive_sync: "true"
  
  # Performance tuning
  request_delay_seconds: "2"
  max_retries: "3"
  connection_timeout_seconds: "30"
  
  # Anti-bot measures
  user_agent_rotation: "true"
  random_delays: "true"
  proxy_rotation: "false"  # Set to true if using proxy service

---
# Secret for API keys and sensitive data (template - populate with actual values)
apiVersion: v1
kind: Secret
metadata:
  name: silverfox-api-secrets
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets
  pipedrive_api_token: "cGxhY2Vob2xkZXJfdG9rZW4="  # placeholder_token
  pipedrive_domain: "c2lsdmVyZm94"  # silverfox
  smtp_server: "c210cC5nbWFpbC5jb20="  # smtp.gmail.com
  smtp_username: "eW91cl9lbWFpbEBnbWFpbC5jb20="  # your_email@gmail.com
  smtp_password: "eW91cl9hcHBfcGFzc3dvcmQ="  # your_app_password
  alert_email_recipients: "YWRtaW5Ac2lsdmVyZm94bWFya2V0aW5nLmNvbQ=="  # admin@silverfoxmarketing.com

---
# PersistentVolumeClaim for data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: silverfox-data-pvc
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
spec:
  accessModes:
  - ReadWriteMany  # Multiple pods can read/write
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd  # Use fast storage for performance

---
# PersistentVolumeClaim for logs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: silverfox-logs-pvc
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
# ServiceAccount for the scraper system
apiVersion: v1
kind: ServiceAccount
metadata:
  name: silverfox-scraper-sa
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
automountServiceAccountToken: true

---
# Role for the scraper system
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: silverfox-scraper-role
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
# RoleBinding for the scraper system
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: silverfox-scraper-rolebinding
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
subjects:
- kind: ServiceAccount
  name: silverfox-scraper-sa
  namespace: silverfox-scrapers
roleRef:
  kind: Role
  name: silverfox-scraper-role
  apiGroup: rbac.authorization.k8s.io

---
# NetworkPolicy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: silverfox-scraper-netpol
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
spec:
  podSelector:
    matchLabels:
      app: silverfox-main-scraper-system
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring  # Allow monitoring namespace
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx  # Allow ingress controller
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - {}  # Allow all egress (scrapers need internet access)

---
# CronJob for scheduled scraping (optional)
apiVersion: batch/v1
kind: CronJob
metadata:
  name: silverfox-scheduled-scrape
  namespace: silverfox-scrapers
  labels:
    app: silverfox-scraper-system
    component: scheduler
spec:
  schedule: "0 */4 * * *"  # Every 4 hours
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: silverfox-scraper-sa
          containers:
          - name: scheduled-scraper
            image: silverfox/main-scraper-system:latest
            command: ["/usr/local/bin/python3"]
            args: ["/app/main_scraper_orchestrator.py", "--scheduled", "--config=/app/config/main_scraper_config.csv"]
            env:
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: SCHEDULED_RUN
              value: "true"
            volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: data-volume
              mountPath: /app/output_data
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 1000m
                memory: 2Gi
          volumes:
          - name: config-volume
            configMap:
              name: silverfox-scraper-config
          - name: data-volume
            persistentVolumeClaim:
              claimName: silverfox-data-pvc
          restartPolicy: OnFailure
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1